version: '3'
services:
  db:
    image: "postgres:9.6.5"
    volumes:
      - ./docker-entrypoint-initdb.d/init-tables.sql:/docker-entrypoint-initdb.d/init-tables.sql
    env_file:
     - env_file
    networks:
      - db_network
  flaskapp:
    build: .
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=secure
      - POSTGRES_DB=webserver
      - APP_SECRET_KEY=super_duper_secret
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - .:/opt/services/flaskapp/src
    networks:
      - db_network
      - web_network
    depends_on:
      - db
  rabbit:
    image: "rabbitmq:3-management"
    hostname: "rabbit"
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=secure
      - POSTGRES_DB=webserver
      - APP_SECRET_KEY=super_duper_secret
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq"
    networks:
     - ingestion_network
    depends_on:
      - db
  ingestion:
    build: ingestion/.
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=secure
      - POSTGRES_DB=webserver
      - APP_SECRET_KEY=super_duper_secret
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=/
    networks:
      - ingestion_network
    restart: on-failure
    depends_on:
      - rabbit
    ports:
     - "80:5672"
  processing:
    build: processing/.
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=secure
      - POSTGRES_DB=webserver
      - APP_SECRET_KEY=super_duper_secret
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=/
    networks:
      - ingestion_network
      - db_network
    restart: on-failure
    depends_on:
      - rabbit
    ports:
     - "81:5672"
  nginx:
    image: "nginx:1.13.5"
    ports:
      - "8080:80"
    volumes:
      - ./conf.d:/etc/nginx/conf.d
    networks:
      - web_network
    depends_on: 
      - flaskapp
networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge
  ingestion_network:
    driver: bridge
volumes:
  dbdata:
